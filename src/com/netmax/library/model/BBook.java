package com.netmax.library.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import com.netmax.library.model.base.BaseBBook;
import com.netmax.library.model.tools.JsonFormat;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class BBook extends BaseBBook<BBook> {
	public static final BBook dao = new BBook();
	
	//最新图书
	public List getNewBooks(){
		List<BBook> list= BBook.dao.find("select top 10 * from b_book order by r_date desc");
		List result=new ArrayList();
		for(BBook book : list){
			HashMap map=new HashMap();
			map.put("bookId", book.getBNo());
			map.put("bookName", book.getBTitle());
			map.put("author", book.getBDutyer());
			map.put("publisher", book.getPubMan());
			map.put("theDate", book.getPubDate());
			if(book.getBPicture()==null || "".equals(book.getBPicture())){
				map.put("pic", "img/book.png");
			}else{
				map.put("pic", book.getBPicture());
			}
			
			map.put("isbn", book.getBIsbn());
			result.add(map);
		}
		return result;
	}
	
	//推荐图书
	public List tuijianBooks(){
		List<Record> list=Db.find("select top 10 b.* from s_tj s left join b_book b on b.b_no=s.b_no order by s.createdate desc");
		List result=new ArrayList();
		for(Record book : list){
			HashMap map=new HashMap();
			map.put("bookId", book.getBigDecimal("b_no"));
			map.put("bookName", book.getStr("b_title"));
			map.put("author", book.getStr("b_dutyer"));
			map.put("publisher", book.getStr("pub_man"));
			map.put("theDate", book.getStr("pub_date"));
			if(book.getStr("b_picture")==null || "".equals(book.getStr("b_picture"))){
				map.put("pic", "img/book.png");
			}else{
				map.put("pic", book.getStr("b_picture"));
			}
			
			map.put("isbn", book.getStr("b_isbn"));
			result.add(map);
		}
		return result;
	}
	
	//图书详情
	public HashMap getBookDetail(String bookId){
		BBook book= dao.findById(bookId);
		HashMap map=new HashMap();
		if(book!=null){
			map.put("bookName", book.getBTitle());
			map.put("publisher", book.getPubMan());
			map.put("pubDate", book.getPubDate());
			map.put("author", book.getBDutyer());
			map.put("price", book.getBPrice());
			map.put("note", book.getBNote());
			map.put("bookId", bookId);
			if(book.getBPicture()==null || "".equals(book.getBPicture())){
				map.put("pic", "img/book.png");
			}else{
				map.put("pic", book.getBPicture());
			}
		}
		
		return map;
	}
	
	//按书名查询，分页
	public List<HashMap> searchByBookName(String keyWord,int thePage,String sid){
		Page<BBook> page;
		if(sid.equals("")){
			page=dao.paginate(thePage, 10, "select * ", "from b_book where b_title like ?","%"+keyWord+"%");			
		}else{
			page=dao.paginate(thePage, 10, "select * ", "from b_book where b_title like ? and s_id=?","%"+keyWord+"%",sid);
		}
		
		List<HashMap> resultList=new ArrayList();
		
		List<BBook> books=page.getList();
		for(BBook book : books){
			HashMap map=new HashMap();
			map.put("bookId", book.getBNo());
			map.put("bookName", book.getBTitle());
			map.put("author", book.getBDutyer());
			map.put("publisher", book.getPubMan());
			map.put("theDate", book.getPubDate());
			if(book.getBPicture()==null || "".equals(book.getBPicture())){
				map.put("pic", "img/book.png");
			}else{
				map.put("pic", book.getBPicture());
			}
			
			map.put("isbn", book.getBIsbn());
			resultList.add(map);
		}
		return resultList;
	}
	
	
	//按作者检索，分页
	public List<HashMap> searchByAuthor(String keyWord,int thePage,String sid){
		Page<BBook> page;
		if(sid.equals("")){
			page=dao.paginate(thePage, 10, "select * ", "from b_book where (b_dutyer like ? or b_dutyerPy like ?) ","%"+keyWord+"%","%"+keyWord+"%");
		}else{
			page=dao.paginate(thePage, 10, "select * ", "from b_book where (b_dutyer like ? or b_dutyerPy like ?) and s_id=?","%"+keyWord+"%","%"+keyWord+"%",sid);
		}
		
		List<HashMap> resultList=new ArrayList();
		
		List<BBook> books=page.getList();
		for(BBook book : books){
			HashMap map=new HashMap();
			map.put("bookId", book.getBNo());
			map.put("bookName", book.getBTitle());
			map.put("author", book.getBDutyer());
			map.put("publisher", book.getPubMan());
			map.put("theDate", book.getPubDate());
			if(book.getBPicture()==null || "".equals(book.getBPicture())){
				map.put("pic", "img/book.png");
			}else{
				map.put("pic", book.getBPicture());
			}
			
			map.put("isbn", book.getBIsbn());
			resultList.add(map);
		}
		return resultList;
	}
	
	//按出版社检索，分页
		public List<HashMap> searchByPublisher(String keyWord,int thePage,String sid){
			Page<BBook> page;
			if(sid.equals("")){
				page=dao.paginate(thePage, 10, "select * ", "from b_book where pub_man like ?","%"+keyWord+"%");
			}else{
				page=dao.paginate(thePage, 10, "select * ", "from b_book where pub_man like ? and s_id=?","%"+keyWord+"%",sid);
			}
			
			List<HashMap> resultList=new ArrayList();
			
			List<BBook> books=page.getList();
			for(BBook book : books){
				HashMap map=new HashMap();
				map.put("bookId", book.getBNo());
				map.put("bookName", book.getBTitle());
				map.put("author", book.getBDutyer());
				map.put("publisher", book.getPubMan());
				map.put("theDate", book.getPubDate());
				if(book.getBPicture()==null || "".equals(book.getBPicture())){
					map.put("pic", "img/book.png");
				}else{
					map.put("pic", book.getBPicture());
				}
				
				map.put("isbn", book.getBIsbn());
				resultList.add(map);
			}
			return resultList;
		}
		
		//按出版社检索，分页
		public List<HashMap> searchByIsbn(String keyWord,int thePage,String sid){
			Page<BBook> page;
			if("".equals(sid)){
				page=dao.paginate(thePage, 10, "select *, sum(case when (b_status='在架') then 1 else 0 end)  from b_status where  b_status.b_no=b_book.b_no) as shu1 ", "from b_book where b_isbn like ?","%"+keyWord+"%");
			}else{
				page=dao.paginate(thePage, 10, "select *, um(case when (b_status='在架') then 1 else 0 end)  from b_status where  b_status.b_no=b_book.b_no) as shu1  ", "from b_book where b_isbn like ? and s_id=?","%"+keyWord+"%",sid);
			}
			
			List<HashMap> resultList=new ArrayList();
			
			List<BBook> books=page.getList();
			for(BBook book : books){
				HashMap map=new HashMap();
				map.put("bookId", book.getBNo());
				map.put("bookName", book.getBTitle());
				map.put("author", book.getBDutyer());
				map.put("publisher", book.getPubMan());
				map.put("theDate", book.getPubDate());
				if(book.getBPicture()==null || "".equals(book.getBPicture())){
					map.put("pic", "img/book.png");
				}else{
					map.put("pic", book.getBPicture());
				}
				
				map.put("isbn", book.getBIsbn());
				resultList.add(map);
			}
			return resultList;
		}
		
		public List<HashMap> searchNew(int thePage, 
				                       String title, 
				                       String dutyer, 
				                       String sid, 
				                       String kind,
				                       String isbn,
				                       String pub_man,
				                       String pub_date, String pub_zhaiyao){
			String sql="select s_id,s_name from web_school";
			List<Record> list_sch=Db.find(sql);
			
			List<HashMap> resultList=new ArrayList();			
			Page<BBook> page;
			int pageSize=10;
			String where=" from b_book where 1=1 ";
			List<String> params=new ArrayList();
			
			//题名
			if(title!=null && !"".equals(title)){
				where+=" and b_title like ?";
				params.add("%"+title+"%");
			}
			
			//作者
			if(dutyer!=null && !"".equals(dutyer)){
				where+=" and b_dutyer like ?";
				params.add("%"+dutyer+"%");
			}
			
			//分馆
			if(sid!=null && !"".equals(sid)){
				where+=" and S_ID =?";
				params.add(sid);
			}
			
			//分类
			if(kind!=null && !"".equals(kind)){
				where+=" and b_kind like ?";
				params.add("%"+kind+"%");
			}
			
			//isbn
			if(isbn!=null && !"".equals(kind)){
				where+=" and b_kind like ?";
				params.add("%"+kind+"%");
			}
			
			//出版社
			if(pub_man!=null && !"".equals(pub_man)){
				where +=" and pub_man like ?";
				params.add("%"+pub_man+"%");
			}
			
			//出版日期
			if(pub_date!=null && !"".equals(pub_date)){
				where +=" and pub_date like ?" ;
				params.add("%"+pub_date+"%");
			}
			
			//摘要
			if(pub_zhaiyao!=null && !"".equals(pub_zhaiyao)){
				where +=" and b_index like ?";
				params.add("%"+pub_zhaiyao+"%");
			}
			
			where +=" order by r_date DESC ";
			System.out.println(where);
			System.out.println("thePage:"+thePage);
			page=BBook.dao.paginate(thePage, pageSize, "select * ", where,params.toArray());
			List<BBook> books=page.getList();
			for(BBook book : books){
				String sql_count="select sum(case when (b_status='在架') then 1 else 0 end) as shu1,COUNT(*) as shu2  from b_status  where b_no="+book.getBNo();
				Record rs1=Db.findFirst(sql_count);
				
				HashMap map=new HashMap();
				map.put("bookId", book.getBNo());
				map.put("bookName", book.getBTitle());
				map.put("frame", book.getBFrame());
				map.put("sid", book.getSId());
				for(Record rs2 : list_sch){
					if(book.getSId().equals(rs2.getStr("s_id"))){
						map.put("sname", rs2.getStr("s_name"));
						break;
					}
				}		
				
				map.put("author", book.getBDutyer());
				map.put("publisher", book.getPubMan());
				map.put("theDate", book.getPubDate());
				map.put("shu1", rs1.getInt("shu1"));
				map.put("shu2", rs1.getInt("shu2"));
				if(book.getBPicture()==null || "".equals(book.getBPicture())){
					map.put("pic", "img/book.png");
				}else{
					map.put("pic", book.getBPicture());
				}
				
				map.put("isbn", book.getBIsbn());
				resultList.add(map);
			}
			return resultList;
		}
}
